-- Original translation works of zackdreaver: https://github.com/zackdreaver/ROenglishRE
-- Continuated by llchrisll at https://github.com/llchrisll/ROenglishRE
-- This file can be distributed, used and modified freely
-- This file shouldn't be claimed as part of your project, unless you fork it from https://github.com/llchrisll/ROenglishRE
-- This file only works if used in combination with the `Custom Lua Support`

require('SystemEN/LuaFiles514/rotp_f')

function ReqJobName(jobID)
	if CLSJobs == nil then
		if jobtbl_CLS ~= nil then
			F_LuaTableMerge(jobtbl_CLS,jobtbl)
		end
		if JobNameTable_CLS ~= nil then
			F_LuaTableMerge(JobNameTable_CLS,JobNameTable)
		end
		if JTtbl_CLS ~= nil then
			F_LuaTableInsert(JTtbl_CLS,JTtbl)
		end
		if PetNameTable_CLS ~= nil then
			F_LuaTableMerge(PetNameTable_CLS,PetNameTable)
		end
		if PetIllustNameTable_CLS ~= nil then
			F_LuaTableMerge(PetIllustNameTable_CLS,PetIllustNameTable)
		end
		if PetIllustNameTable_Eng_CLS ~= nil then
			F_LuaTableMerge(PetIllustNameTable_Eng_CLS,PetIllustNameTable_Eng)
		end
		if PetAccIDs_CLS ~= nil then
			F_LuaTableInsert(PetAccIDs_CLS,PetAccIDs)
		end
		if PetAccActNameTable_CLS ~= nil then
			F_LuaTableMerge(PetAccActNameTable_CLS,PetAccActNameTable)
		end
		if PetAccActNameTable_Eng_CLS ~= nil then
			F_LuaTableMerge(PetAccActNameTable_Eng_CLS,PetAccActNameTable_Eng)
		end
		if PetStringTable_CLS ~= nil then
			F_LuaTableMerge(PetStringTable_CLS,PetStringTable)
		end
		if PetEggItemID_PetJobID_CLS ~= nil then
			F_LuaTableMerge(PetEggItemID_PetJobID_CLS,PetEggItemID_PetJobID)
		end
		if PetFoodTable_CLS ~= nil then
			F_LuaTableMerge(PetFoodTable_CLS,PetFoodTable)
		end
		CLSJobs = 1
	end
	if JobNameTable[jobID] ~= nil then
		return JobNameTable[jobID]
	end
	return ""
end

function GetJobString(jobID)
	for k, v in pairs(jobtbl) do
		if v == jobID then
			return k
		end
	end
	return ""
end

function GetPetIllustName(jobID)
	filePath = "유저인터페이스\\illust\\"
	fileName = "펫_포링.bmp"
	if PetIllustNameTable[jobID] ~= nil then
		fileName = PetIllustNameTable[jobID]
	end
	return filePath .. fileName
end

function GetPetIllustName_V2(jobID, in_bResEnglishName)
	local filePath = "UserInterface\\illust\\"
	local fileName = "PET_PORING.bmp"
	if in_bResEnglishName == true then
		if PetIllustNameTable_Eng[jobID] ~= nil then
			fileName = PetIllustNameTable_Eng[jobID]
		end
	else
		return GetPetIllustName(jobID)
	end
	return filePath .. fileName
end

function GetPetIllustName_V3(jobID)
	local filePath = "UserInterface\\illust\\"
	local fileName = "PET_NOIMAGE.bmp"
	if PetIllustNameTable_Eng[jobID] ~= nil then
		fileName = PetIllustNameTable_Eng[jobID]
	end
	return filePath .. fileName
end

function GetPetAccActName(accID)
	local filePath = "몬스터\\"
	local fileName = "chocho_방독면.act"
	if PetAccActNameTable[accID] ~= nil then
		fileName = PetAccActNameTable[accID]
	end
	return filePath .. fileName
end

function GetPetAccActName_V2(accID, in_bResEnglishName)
	local filePath = "Monster\\"
	local fileName = "ACC_CHOCHO.act"
	if in_bResEnglishName == true then
		if PetAccActNameTable_Eng[accID] ~= nil then
			fileName = PetAccActNameTable_Eng[accID]
		end
	else
		return GetPetAccActName(accID)
	end
	return filePath .. fileName
end

function IsPetAccessory(accID)
	if accID > PetAccIDs.ACC_FIRST and accID < PetAccIDs.ACC_LAST then
		return true
	end
	return false
end

function GetPetName(jobID)
	petName = "poring"
	if PetNameTable[jobID] ~= nil then
		petName = PetNameTable[jobID]
	end
	return petName
end

function GetPetString(jobID)
	if PetStringTable[jobID] ~= nil then
		return PetStringTable[jobID]
	end
	return ""
end

function GetPetJTID_by_PetEggITID(petEggITID)
	if PetEggItemID_PetJobID[petEggITID] ~= nil then
		return PetEggItemID_PetJobID[petEggITID]
	end
	return -1
end

function GetPetFood(jobID)
	if PetFoodTable[jobID] ~= nil then
		return PetFoodTable[jobID]
	end
	return -1
end